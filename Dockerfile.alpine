FROM alpine:latest

# Setup build environment
ENV BAZEL_VERSION='4.2.2'
ENV BAZEL_SHA256SUM='11dea6c7cfd866ed520af19a6bb1d952f3e9f4ee60ffe84e63c0825d95cb5859'
ENV BUILDTOOLS_VERSION='3.0.0'
ENV BUILDIFIER_SHA256SUM='e92a6793c7134c5431c58fbc34700664f101e5c9b1c1fcd93b97978e8b7f88db'
ENV BUILDOZER_SHA256SUM='3d58a0b6972e4535718cdd6c12778170ea7382de7c75bc3728f5719437ffb84d'
ENV TENSORFLOW_VERSION='tf-nightly'

# Get the code
COPY . /tensorboard
WORKDIR /tensorboard

# Install environment dependencies
RUN apk add git wget unzip nodejs npm python3 py3-pip python3-dev openjdk17 musl-dev linux-headers g++ && \
  # Installing glibc
  wget -q -O /etc/apk/keys/sgerrand.rsa.pub https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub && \
  wget https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.35-r0/glibc-2.35-r0.apk && \
  apk add glibc-2.35-r0.apk && \
  # Installing PIP and aliasing python3 -> python
  python3 -m pip install -U pip && \
  ln -s /usr/bin/python3 /usr/bin/python
# PIP Install
RUN pip install \
    -r ./tensorboard/pip_package/requirements.txt \
    -r ./tensorboard/pip_package/requirements_dev.txt
# "$TENSORFLOW_VERSION"
# Bazel Install
RUN ci/download_bazel.sh "${BAZEL_VERSION}" "${BAZEL_SHA256SUM}" ~/bazel && \
  mv ~/bazel /usr/local/bin/bazel && chmod +x /usr/local/bin/bazel && cp ./ci/bazelrc ~/.bazelrc && \
  npm i -g @bazel/ibazel
# Fetch bazel dependencies
RUN bazel fetch //tensorboard/...
